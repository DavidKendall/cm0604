<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document>
  <header>
    <title>CM0604 Embedded Systems Specification and Design</title>
  </header>
<body>

<p>
<img class="floatright"
     src="images/cm604_image.png"
     alt="Embedded Systems Modelling Image"
     width="400"/>

This module is designed to serve as an introduction to formal and
object-oriented methods for specifying, designing and reasoning about
embedded systems. The module uses state-of-the-art tools and
techniques, including SPIN, UPPAAL and PRISM. It emphasises the
importance of constructing and analysing models in the early stages of
system development.

<br/><br/>

The main ideas are communicated in a series of 12 lectures. The
laboratory sessions are used to put these ideas into practice in a
variety of modelling and analysis exercises. By the end of the module,
you should be able to take an informal specification of an embedded
system, construct a formal model of (part of) a design
and reason about the likely behaviour of the system. The understanding
gained in this process can be invaluable in the implementation of a
reliable system.

<br/><br/>

The principles and techniques taught in this module are used
extensively in the module EN0617 Industrial Case Project.
</p>

<section id="news">
<title>News</title>

<!--
<p>
<em>02-11-2015, 09.00</em><br/>
<strong>Assignment Specification Published
  [<a href="ext:ra/CM604/assgn">Specification</a>]
</strong> <br/>
Please address
any queries about the specification to
<a href="mailto:david.kendall@northumbria.ac.uk?subject=CM0604 Assignment Specification 2015">David Kendall</a>.
</p>

<p>
<em>05-11-2011, 10.30</em><br/>
<strong>Solutions to exercises (1-4)</strong><br/>
Solutions for (most of) the exercises for weeks 1 to 4 are now available. See week 4 practical below. Any questions to <a href="mailto:david.kendall@northumbria.ac.uk">David Kendall</a>.
</p>

-->

<p>
<em>19-09-2016, 09.00</em><br/>
<strong>Start of teaching</strong><br/>
Teaching starts in the week commencing Mon 19 September 2016.
</p>

</section>


<section id="team">
<title>Module Team</title>
<p/>
<dl>
<dt><strong>Module Tutor</strong></dt>
<dd><a href="ext:kendall">David Kendall</a>
david.kendall@northumbria.ac.uk
</dd>
<dt><strong>Lecturer</strong></dt>
<dd><a href="ext:brockway">Michael Brockway</a>
michael.brockway@northumbria.ac.uk
</dd>
</dl>
</section>

<section id="teaching">
<title>Teaching Arrangements</title>
<p>
<strong>Lecture</strong> Mon 13.00 - 15.00 NB 440 <br/>
<strong>Lab/Seminar</strong> Thu 09.00 - 11.00 PB F1 <br/>
</p>
</section>

<section id="synopsis">
<title>Synopsis</title>
<p>
The aim of the module is to provide an understanding of the theory and
practice of modelling, specification and analysis in the design of
embedded systems.
</p>
<p>
On completion of this module, students will be able to:
</p>
<ol>
<li> Evaluate the advantages and disadvantages of the application of
formal and object-oriented methods in the development of embedded
systems, and justify their use where appropriate; having regard to
professional, technical and security issues.</li>
<li> Construct and evaluate formal and object-oriented models of a
variety of small embedded systems.</li>
<li> Compose formal specifications of system properties and analyse
system models with respect to them.</li>
<li> Identify, apply and evaluate appropriate software tools to
support the construction and analysis of formal and object-oriented
system models and properties.</li>
</ol>

</section>


<section id="plan">
<title>Teaching Plan</title>
<p>
The following is a <em>provisional</em> guide to the organisation of
the module for this year. These arrangements are subject to
change during the course of the module.
</p>
<table>
<tr>
<th>Week</th> <th>W/c</th> <th>Lecture</th> <th>Practical</th>
</tr>

<tr>
<td><strong>1</strong></td> <td>19-Sep</td>

<td>Module overview. Introduction to Embedded Systems Specification
&#38; Design; Formal Modelling tools.
[<a href="ext:ra/CM604/lec01">Slides</a>]
<br/>
<em>Required Reading:</em>
[<a href="site:reading/hol14">HOL14</a>]
</td>

<td> The SPIN modelling tool and its PROMELA modelling and
specification language
[<a href="ext:ra/CM604/spinintro">Slides</a>]
[<a href="site:exercises/ex01">Exercises</a>]
</td>
</tr>

<tr>
<td><strong>2</strong></td> <td> 26-Sep </td>

<td>Modelling and Specification with Finite State Automata Part I
[<a href="ext:ra/CM604/lec02">Slides</a>]
<br/>
<em>Required Reading:</em>
[<a href="site:reading/rus95">RUS95</a>],
[<a href="site:reading/sta95">STA95</a>]
</td>

<td> More PROMELA. Checking safety properties with SPIN;
[<a href="ext:ra/CM604/spinintro">Slides</a>]
[<a href="site:exercises/ex02">Exercises</a>]
</td>
</tr>

<tr>
<td><strong>3</strong></td> <td> 03-Oct </td>

<td>Modelling and Specification with Finite State Automata Part II
[<a href="ext:ra/CM604/lec03">Slides</a>]
[<a href="ext:ra/CM604/mutex1">Mutex model</a>]
</td>

<td>  Checking liveness properties with SPIN;
[<a href="site:exercises/ex03">Exercises</a>]
[<a href="ext:ra/CM604/solutions_01-02">Outline solutions (1-2)</a>]
</td>
</tr>

<tr><td><strong>4</strong></td> <td> 10-Oct </td>

<td>Temporal logic. Specification patterns.
[<a href="ext:ra/CM604/lec04">Slides</a>]<br/>
<em>Required Reading:</em>
[<a href="site:reading/dac99">DAC99</a>]
[<a href="site:reading/sac03">SAC03</a>]
</td>

<td> Temporal Logic Specification and Analysis
[<a href="site:exercises/ex04">Exercises</a>]
[<a href="ext:ra/CM604/solutions_03-04">Outline solutions (3-4)</a>]
</td>
</tr>


<tr>
<td><strong>5</strong></td> <td> 17-Oct </td>

<td>
Modelling and analysis of security protocols
[<a href="ext:ra/CM604/lec05a">Slides</a>]
<br/>
Timed Automata and Timed Transition Systems
[<a href="ext:ra/CM604/lec05">Slides</a>]
<br/>
<em>Required Reading:</em>
[<a href="ext:ra/CM604/uppaalTutorial">Uppaal Tutorial</a>]
[<a href="site:reading/lev95">LEV95</a>]
</td>

<td> Introduction to UPPAAL <br/>
[<a href="ext:ra/CM604/lab05">Exercises</a>]
</td>
</tr>

<tr>
<td><strong>6</strong></td> <td> 24-Oct </td>

<td>Networks of Timed Automata. Specifying real-time properties
[<a href="ext:ra/CM604/lec06">Slides</a>]
<br/>
<em>Required Reading:</em>
[<a href="site:reading/hol01">HOL01</a>]
</td>

<td> Modelling a box sorter <br/>
[<a href="ext:ra/CM604/lab06">Exercises</a>]
[<a href="ext:ra/CM604/lab10model">Box sorter model</a>]
</td>
</tr>

<tr>
  <td><strong>7</strong></td> <td> 31-Oct </td>

<td>Uppaal language extensions for timed automata. Uppaal case study.
[<a href="ext:ra/CM604/lec07">Slides</a>]
[<a href="ext:ra/CM604/casestudy">Case study</a>]
</td>

<td> Modelling and verifying a real-time communication protocol
[<a href="ext:ra/CM604/lab07">Exercises</a>]
[<a href="ext:ra/CM604/lab11model">TTP model</a>]
</td>
</tr>

<tr>
<td><strong>8</strong></td> <td> 07-Nov </td>

<td>Principles of automata-theoretic verification of real-time systems
[<a href="ext:ra/CM604/lec08">Slides</a>]
</td>

<td> A scheduling problem
[<a href="ext:ra/CM604/lab08">Exercises</a>]
[<a href="ext:ra/CM604/lab12model">Bridge model</a>]
</td>
</tr>

<tr>
<td><strong>9</strong></td> <td> 14-Nov </td>

<td>
Introduction to Probabilistic Modelling. PRISM
[<a href="ext:ra/CM604/lec09">Slides</a>]
<br/>
<!--
[<a href="ext:ra/CM604/lec09">Slides</a>]
-->
<br/>
<!--
<em>Required Reading:</em>
[<a href="ext:ra/CM604/uppaalTutorial">Uppaal Tutorial</a>]
[<a href="site:reading/lev95">LEV95</a>]
-->
</td>

<td> Probabilistic Models Lab 1
[<a href="ext:ra/CM604/lab09">Exercises</a>]
</td>
</tr>

<tr>
<td><strong>10</strong></td> <td> 21-Nov </td>

<td>More on PRISM
[<a href="ext:ra/CM604/lec10">Slides</a>]
<br/>
<!--
<em>Required Reading:</em>
[<a href="site:reading/hol01">HOL01</a>]
-->
</td>

<td> Probabilistic Models Lab 2
[<a href="ext:ra/CM604/lab10">Exercises</a>]
<!--
[<a href="ext:ra/CM604/lab10model">Box sorter model</a>]
-->
</td>
</tr>

<tr>
<td><strong>11</strong></td> <td> 28-Nov </td>

<td>Probabilistic Automata
[<a href="ext:ra/CM604/lec11">Slides</a>]
</td>

<td> Probabilistic Models Lab 3
[<a href="ext:ra/CM604/lab11">Exercises</a>]
<!--
[<a href="ext:ra/CM604/lab11model">TTP model</a>]
-->
</td>
</tr>

<tr>
<td><strong>12</strong></td> <td> 05-Dec </td>

<td>Probabilistic Temporal Logic
[<a href="ext:ra/CM604/lec12">Slides</a>]
</td>

<td> Probabilistic Models Lab 4
[<a href="ext:ra/CM604/lab12">Exercises</a>]
<!--
[<a href="ext:ra/CM604/lab12model">Vikings model</a>]
-->
</td>
</tr>
</table>
<note>
In addition to the taught sessions, you are expected to undertake
independent and directed learning. This is a 20-credit module, for
which the expected student workload is 200 hours. Over the course of a
15-week semester, you should be spending about 13 hours per week on
this module.
</note>
</section>


<section id="assessment">
<title>Assessment</title>
<p>
Summative assessment comprises:
</p>
<ul>
<li> a substantial exercise in specification, design and analysis in
which students will be required to demonstrate both a practical ability to
apply appropriate languages, techniques and tools, and also an understanding
of the theoretical principles underlying their practice.</li>
</ul>
<p>
  The assessment specification will be made available to students in week 6 and will be
  discussed in the lab session that week. The work is due to be submitted via the elP (Blackboard)
  by 23.59 on Thursday of week 13. Feedback and provisional marks will be
  provided to students by email within 20 working days of submission.
</p>
<ul> <li> <a href="ext:ra/CM604/assgn">Assignment Specification</a> </li> </ul>
<p>
  Assessment is subject to the <a
  href="https://www.northumbria.ac.uk/sd/central/ar/qualitysupport/student/assessmentguidance/">Academic
  Regulations for Taught Awards</a>. You should ensure that you are familiar
  with the latest regulations, particularly with regard to academic misconduct
  and late submission of work.
</p>
<p>
  You can view the latest <a href="ext:ra/CM604/med">module evaluation document</a>
</p>
<!--

<p id="pastpapers">
<strong>Past Exam Papers:</strong>
[<a href="ext:ra/CM604/exam2003-04">2003-04</a>],
[<a href="ext:ra/CM604/exam2004-05">2004-05</a>],
[<a href="ext:ra/CM604/exam2005-06">2005-06</a>],
[<a href="ext:ra/CM604/exam2006-07">2006-07</a>],
[<a href="ext:ra/CM604/exam2007-08">2007-08</a>],
[<a href="ext:ra/CM604/exam2008-09">2008-09</a>],
[<a href="ext:ra/CM604/exam2009-10">2009-10</a>]
</p>
-->

</section>

<section id="reading">
<title>Recommended Reading</title>
<p>
There is no essential text for this module. Below is a list of references to
texts and other resources that are relevant to the content of the module.
You may find many of them useful and/or interesting. In addition, you are
required to undertake some background reading about the use of formal methods
in the development of embedded and critical systems.
[<a href="site:reading/">More</a>]
</p>
<ul>
<li>
Alavi, H. et al., <a href="ext:specpatterns">SPEC Patterns</a>, 2005</li>
<li>
Barland, I.; Vardi, M.; Greiner, J. <a href="http://cnx.org/contents/cd5745fd-3270-46ee-9b64-6e4843b67c43@3.4/Model_Checking_Concurrent_Prog">Model Checking Concurrent
Programs</a>,
April, 2007.
</li>
<li>
Behrmann,G., David,A., and Larsen,K.
<a href="http://www.it.uu.se/research/group/darts/papers/texts/new-tutorial.pdf">A Tutorial on Uppaal</a>, Department of Computer Science, Aalborg University, Denmark, 2004
</li>
<li>
Berard, B. et al., Systems and Software Verification: Model Checking
Techniques and Tools, Springer Verlag, 2010</li>
<li>
Cooling, J.E. Software Engineering for Real-Time
Systems. Addison-Wesley, 2003.</li>
<li>
Douglass, B.P. Real-Time UML. Addison-Wesley, 1999.</li>
<li>
Douglass, B.P. Doing Hard Time. Addison-Wesley, 1999.</li>
<li>
Gomaa, H. Designing Concurrent Distributed and Real Time Applications
with UML. Addison-Wesley, 2000.</li>
<li>Harel, D.
<a href="http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/VisualFormalisms.pdf"><em>On Visual Formalisms</em></a> and <a href="http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/BitingTheSilverBullet.pdf"><em>Biting the Silver Bullet: Toward a Brighter Future for System Development</em></a></li>
<li>
Holzmann, G., The SPIN Model Checker: Primer and Reference Manual,
Addison Wesley, 2003, ISBN 0321228626</li>
<li>Holzmann, G., <a href="http://cgweb1.northumbria.ac.uk/SubjectAreaResources/cm604/hol14.pdf">Mars Code</a>, Communications of the ACM, 57(2), Feb 2014
</li>
<li>Huckle, T.
<a href="ext:bugse">Collection of Software Bugs</a>, 2004</li>
<li>Huth, M., Ryan, M., <em>Logic in Computer Science: Modelling and
  Reasoning about Systems</em> 2nd edition, Cambridge University Press, 2004.
</li>
<li>Lee, E. and Seshia, S., <a href="http://LeeSeshia.org">Introduction to Embedded Systems, A Cyber-Physical Systems Approach</a>, Second Edition, LeeSeshia.org, ISBN 978-1-312-42740-2, 2015. <br/>
  A free text book by Edward A. Lee and Sanjit A. Seshia that provides a modern introduction to embedded systems.
</li>
<li>Vaandrager, F., <a href="http://www.cs.ru.nl/~fvaan/PV/what_is_a_good_model.html">What is a good model</a>, Unpublished note, 2010
</li>
<li>
Technical journals and conference papers, e.g. Computer Aided
Verification (CAV), Tools and Algorithms for the Construction of
Systems (TACAS)</li>

</ul>
</section>

<section id="resources">
<title>Other resources</title>
<p>
<a href="ext:spin">
<img class="floatright" src="site:images/spinlogo"
     alt="SPIN Logo"    width="80" /></a>
</p>
<p>
<strong><a href="ext:spin">SPIN</a></strong><br/>
"Spin is a popular open-source software tool, used by thousands of
people worldwide, that can be used for the formal verification of
distributed software systems. The tool was developed at Bell Labs in the
original Unix group of the Computing Sciences Research Center, starting in
1980. The software has been available freely since 1991, and continues to
evolve to keep pace with new developments in the field. In April 2002 the tool
was awarded the prestigious System Software Award for 2001 by the ACM." [<a
  href="http://awards.acm.org/award_winners/holzmann_1625680.cfm">Holzmann</a>]
</p> <p> The main focus of this module, in weeks 1-4, is on the theory and
practical application of this tool to the modelling and analysis of embedded
systems. It is essential that you use the tool extensively on a variety of lab
exercises. The tool is installed in PB Lab F1 on the Linux machines. It is also
available free for use on your own machines -- see the <a
  href="ext:spin/download">download</a> instructions.  </p>

<ul>
<li><a href="http://spinroot.com/spin/Man/3_SpinGUI.html">Getting Started with SPIN</a></li>
<li><a href="http://spinroot.com/spin/Man/">SPIN online references</a></li>
</ul>

<p>
  <a href="http://www.uppaal.org">
<img class="floatright" src="http://www.it.uu.se/research/group/darts/uppaal/uppaal-sim-350.png"
     alt="Uppaal Logo"    width="100" /></a>
</p>
<p>
<strong><a href="http://www.uppaal.org/">UPPAAL</a></strong><br/>

"Uppaal is an integrated tool environment for modeling, validation and
verification of real-time systems modeled as networks of timed
automata, extended with data types (bounded integers, arrays, etc.).
</p>
<p>
The tool is developed in collaboration between the Department of
Information Technology at Uppsala University, Sweden and the
Department of Computer Science at Aalborg University in Denmark."
</p>

<p>
  It is also available for <a href="http://www.uppaal.com/">commercial use</a>.
</p>

<p>
The main focus of this module, in weeks 5-8, is on the theory and
practical application of this tool to the modelling and analysis of
embedded systems. It is essential that you use the tool extensively on
a variety of lab exercises. The tool is installed in PB Lab F1 on the
Linux machines. It is also available free for use on your own machines
-- get the <a href="ext:ra/CM604/uppaal">local Uppaal installation
archive</a>.  There is a <a
href="ext:ra/CM604/uppaalTutorial">tutorial</a> that gives a good
introduction to the theory and practice of modelling with timed
automata and analysis with the Uppaal tool.
</p>
<p>
  <a href="http://www.prismmodelchecker.org">
<img class="floatright" src="http://www.prismmodelchecker.org/images/ss_graph.png"
     alt="PRISM Logo"    width="100" /></a>
</p>
<p>
<strong><a href="http://www.prismmodelchecker.org/">PRISM</a></strong><br/>
"PRISM is a probabilistic model checker, a tool for formal modelling and
analysis of systems that exhibit random or probabilistic behaviour. It has been
used to analyse systems from many different application domains, including
communication and multimedia protocols, randomised distributed algorithms,
security protocols, biological systems and many others." The tool is <a
  href="http://www.prismmodelchecker.org/download.php">free to download</a>.
</p>
</section>

<section id="ethics">
<title>Professionlism, ethics and standards</title>

<ul>
<li>
<a href="http://www.acm.org/about-acm/acm-code-of-ethics-and-professional-conduct">ACM Code of Ethics and Professional Conduct</a>
</li>

<li>
<a href="http://www.bcs.org/server.php?show=nav.6029">BCS Code of Conduct and Good Practice</a>
</li>

<li>
<a href="http://www.ieee.org/about/corporate/governance/p7-8.html">IEEE Code of Ethics</a>
</li>

<li>
<a href="http://www.raeng.org.uk/policy/engineering-ethics/ethics">Royal academy of engineering: Engineering ethics</a>
</li>

<li>
<a href="http://cogprints.ecs.soton.ac.uk/archive/00003299/">Ehical issues in empirical studies of software engineering</a>
</li>

<li>
Hennell,M., Woodcock,J. and Woodward,M., <a href="http://www.fuji-setsu.co.jp/files/IEC61508_ldra.pdf">The Safety Integrity Levels Of IEC 61508 And A Revised Proposal</a>, Embedded Systems Show, 2006. (<a href="ext:ra/CM604/hww06">Local copy</a>)
</li>

<li>Redmill,F., <a href="http://homepages.cs.ncl.ac.uk/felix.redmill/publications/4B.IEC%2061508%20Intro.pdf">An Introduction To The Safety Standard IEC 61508</a>, Journal of the System Safety Society, Volume 35, No. 1, 1999
</li>

<li>International Standardization Organization, <a href="https://www.iso.org/obp/ui/#iso:std:iso:26262:-1:ed-1:v1:en">ISO 26262 Road vehicles - Functional Safety</a>, 2011. (<a href="http://en.wikipedia.org/wiki/ISO_26262">Wikipedia</a>)
</li>

<li>
BS EN 50128:2011 Railway applications. Communication, signalling and
processing systems. Software for railway control and protection
systems
</li>

<li>
IEC 60880 Nuclear power plants - Instrumentation and control systems
important to safety - Software aspects for computer-based systems
performing category A functions, 2006
</li>

<li>
<a href="http://cpsr.org/">Computer Professionals for Social Responsibility</a>
</li>

</ul>

</section>

<section id="security">
<title>Security</title>

<ul>
<li>Anderson, R., <em>Security Engineering: A guide to building dependable distributed systems</em> (2nd edition), John Wiley, 2008 [<a href="ext:ra/CM604/and08">[local copy of Chapter 5 (Cryptography)]</a></li>
<li> Halperin, D., Heydt-Benjamin, T.S., Ransford, B.,  Clark, S.S., Defend, B., Morgan, W., Fu, K., Kohno, T. and Maisel, W.H., <em>Pacemakers and Implantable Cardiac Defibrillators: Software Radio Attacks and Zero-Power Defenses</em>, IEEE Symposium on Security and Privacy, 129-142, May, 2008 [<a href="ext:ra/CM604/hhr08">pdf</a>]</li>
<li> Koopman, P., <em>Embedded system security</em>, IEEE Computer, 37(7): 95-97, July 2004 [<a href="ext:ra/CM604/koo04">pdf</a>]</li>
<li> Karl Koscher, Alexei Czeskis, Franziska Roesner, Shwetak Patel, and Tadayoshi Kohno, Stephen Checkoway, Damon McCoy, Brian Kantor, Danny Anderson, Hovav Shacham, and Stefan Savage, <em>Experimental Security Analysis of a Modern Automobile</em>, IEEE Symposium on Security and Privacy 2010, 447-462, 2010 [<a href="ext:ra/CM604/kcr10">pdf</a>]</li>
<li> Maggi, P. and Sisto, R., <em>Using SPIN to verify security properties of cryptographic protocols</em>, Proceedings of SPIN Workshop 2002, LNCS 2318, 187-204, Springer Verlag, 2002 [<a href="ext:ra/CM604/ms02">pdf</a>]</li>
<li> Ryan, P., Schneider, S., Goldsmith, M. and Lowe, G., <em>Modelling and analysis of security protocols: the CSP approach</em>, Addison Wesley, 2000 [<a href="ext:ra/CM604/rsg00">pdf</a>]</li>
</ul>
</section>

</body>
</document>
